class Solution {
   int m,n;
    public int calculateMinimumHP(int[][] a) {
		m=a.length ; n=a[0].length;
        dp=new Integer[m][n]; 
		int ans= dfs(a, 0, 0);
	       return (ans>=0)? 1 : Math.abs(ans)+1;
	}
	Integer[][] dp;
	int dfs(int[][] a,int i,int j) {
		if(i>=m||j>=n) return Integer.MIN_VALUE+5;
		if(i==m-1 && j==n-1) return (a[m-1][n-1]>=0)? 0 : a[m-1][n-1];
        
		if(dp[i][j]!=null) return dp[i][j];
		
		int down=dfs(a, i+1, j);
		int right=dfs(a, i, j+1);
		int self=a[i][j]+Math.max(down, right);
		return dp[i][j]=(self>=0)? 0 : self;
	}
}
